version: '3.2'
services:
  mysql:
    image: mysql
    #mysql8 将会使用不同密码加密所以需要设置会原始加密方式
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - data:/var/lib/mysql
      - conf:/etc/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=nm123
    container_name: mysql8.0
    networks:
      rear:
        aliases:
          - database
    restart: always
  php:
    image: php:7.2.3-fpm
    volumes:
      - type: bind
        source: ./src
        target: /var/www
      # volumes的volume类型 (source 必须是一个资源名称而不是路径)
      # volumes的volume类型,phpconf路径 /var/lib/docker/volumes/vagrantdata_phpconf/_data
      # 可以任意操作此文件（注意权限问题）
      - type: volume
        source: php
        target: /usr/local/etc/php
    container_name: php7.3
    ports:
      - 9000:9000
    networks:
      - rear
      - external
    restart: always
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      # 下面都是bind模式，此模式下面主机文件将会覆盖容器内文件，当取消时，文件将恢复
      # 文件夹下面不能再包含文件夹，只允许有文件，不然容器一致会在restarting状态
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./src:/var/www
    container_name: nginx1.7
    networks:
      external:
        # 网络别名主要用来给其他容器来通信，当设置了相同的网络，就可以使用要联通的目标容器名称
        # 或者网络别名，服务名称，或者共同网关通信，常规用目标容器网络别名
        aliases:
          - nginx1
    restart: always
networks:
  rear:
  external:
#volumes 对应的声明
volumes:
  data:
  conf:
  php: